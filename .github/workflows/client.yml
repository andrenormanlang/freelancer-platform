name: Client CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'apps/client/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/workflows/client.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'apps/client/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

jobs:
  client-lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8.6.12'
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Lint Client
        run: pnpm --filter client lint

      - name: Test Client
        run: pnpm --filter client test
        env:
          NODE_ENV: test

  client-build:
    needs: client-lint-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8.6.12'
          run_install: false

      - name: Restore pnpm dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build Client
        run: pnpm --filter client build

      - name: Upload Client build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: apps/client/dist/
          retention-days: 7

  # Uncomment and configure for deployment when ready
  # client-deploy:
  #   needs: client-build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: client-build
  #         path: apps/client/dist/
  #
  #     # Add your deployment steps here
  #     # For example, deployment to a cloud provider like AWS, Azure, or GCP
  #     # - name: Deploy to production
  #     #   uses: some-deployment-action@v1
  #     #   with:
  #     #     api_token: ${{ secrets.DEPLOYMENT_TOKEN }}
